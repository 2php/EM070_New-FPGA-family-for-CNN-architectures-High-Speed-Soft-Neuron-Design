-- hds header_start
--
-- VHDL Architecture paper_1.adder_4.rtl
--
-- Created:
--          by - HoA.UNKNOWN (LAPTOP-6PPNGBRG)
--          at - 06:40:46 12/18/2017
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2001.5 (Build 170)
--
-- hds header_end
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;


ENTITY adder_9 IS
port(rst,clk,en: in std_logic;
	 x0,x1,x2,x3: in std_logic_vector( 21 downto 0);
	 sum_out: out std_logic_vector( 7 downto 0));
-- Declarations

END adder_9 ;

-- hds interface_end
ARCHITECTURE rtl OF adder_9 IS
signal sum: signed(21 downto 0);
signal xx0,xx1,xx2,xx3: signed(21 downto 0);
BEGIN
--process(rst,clk)
--begin
--if(rst='0')then
--sum<=(others=>'0');
--xx0<=(others=>'0');
--xx1<=(others=>'0');
--xx2<=(others=>'0');
--xx3<=(others=>'0');


--elsif(rising_edge(clk))then
--if(en='1')then
  xx0<=signed(x0);
  xx1<=signed(x1);
  xx2<=signed(x2);
  xx3<=signed(x3);

  
		sum<=xx0+xx1+xx2+xx3;
--end if;
--end if;
--end process;

process(rst,clk,sum) begin
if (sum(21)='1' or sum=0)then
sum_out<=(others=>'0');

elsif (sum>255) then 
--sum_out<=std_logic_vector( sum(20 downo 13));
sum_out<="11111111";   -- 255
else 
--sum_out<=std_logic_vector( sum(20 downto 13));
sum_out<=std_logic_vector( sum(7 downto 0));
end if;
end process;

END rtl;
